package org.jeju.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import org.jeju.dto.Member;

public class MemberDAO {
	Connection con = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
	//member 테이블 목록 불러오기
		public List<Member> getMemberList() {
			List<Member> memList = new ArrayList<>();
			MySQLDB mysql = new MySQLDB();
			try {
				con = mysql.connect();
				pstmt = con.prepareStatement(SqlLang.SELECT_ALL_MEMBER);
				rs = pstmt.executeQuery();
				
				while(rs.next()) {
					Member mem = new Member(rs.getString("id"),
							rs.getString("pw"),
							rs.getString("name"),
							rs.getString("email"),
							rs.getString("tel"),
							rs.getString("jdate"));
					memList.add(mem);
				}
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				mysql.close(con, pstmt, rs);
			}
			return memList;
		}
		
		public Member getMember(String id) {
			Member mem = new Member();
			MySQLDB mysql = new MySQLDB();
			try {
				con = mysql.connect();
				pstmt = con.prepareStatement(SqlLang.SELECT_ONE_MEMBER);
				pstmt.setString(1, id);
				rs = pstmt.executeQuery();
				
				if(rs.next()) {
					mem.setId(rs.getString("id"));
					mem.setPw(rs.getString("pw"));
					mem.setName(rs.getString("name"));
					mem.setEmail(rs.getString("email"));
					mem.setTel(rs.getString("tel"));
					mem.setJdate(rs.getString("jdate"));
				}
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				mysql.close(con, pstmt, rs);
			}
			return mem;
		}
		
		public int join(Member mem) {
			int cnt = 0;
			MySQLDB mysql = new MySQLDB();
			try {
				con = mysql.connect();
				pstmt = con.prepareStatement(SqlLang.INSERT_MEMBER);
				pstmt.setString(1, mem.getId());
				pstmt.setString(2, mem.getPw());
				pstmt.setString(3, mem.getName());
				pstmt.setString(4, mem.getEmail());
				pstmt.setString(5, mem.getTel());
				cnt = pstmt.executeUpdate();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				mysql.close(con, pstmt);
			}
			return cnt;
		}
		
		public int upMember(Member mem) {
			int cnt = 0;
			MySQLDB mysql = new MySQLDB();
			try {
				con = mysql.connect();
				pstmt = con.prepareStatement(SqlLang.UPDATE_MEMBER);
				pstmt.setString(1, mem.getPw());
				pstmt.setString(2, mem.getName());
				pstmt.setString(3, mem.getEmail());
				pstmt.setString(4, mem.getTel());
				pstmt.setString(5, mem.getId());
				cnt = pstmt.executeUpdate();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				oracle.close(con, pstmt);
			}
			return cnt;
		}
		
		public int memberOut(String id) {
			int cnt = 0;
			OracleDB oracle = new OracleDB();
			try {
				con = oracle.connect();
				pstmt = con.prepareStatement(SqlLang.DELETE_MEMBER);
				pstmt.setString(1, id);
				cnt = pstmt.executeUpdate();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				oracle.close(con, pstmt);
			}
			return cnt;
		}

		public boolean idCheck(String id) {
			boolean ck = false;
			Member mem = new Member();
			OracleDB oracle = new OracleDB();
			try {
				con = oracle.connect();
				pstmt = con.prepareStatement(SqlLang.SELECT_ONE_MEMBER);
				pstmt.setString(1, id);
				rs = pstmt.executeQuery();
				
				if(rs.next()) {
					ck = true;
				} else {
					ck = false;
				}
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				oracle.close(con, pstmt, rs);
			}
			return ck;
		}
}
